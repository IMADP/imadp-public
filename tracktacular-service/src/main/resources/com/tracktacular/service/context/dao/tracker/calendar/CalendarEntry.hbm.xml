<?xml version="1.0"?>

<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 2.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
   
    <typedef name="encryptedString" class="org.jasypt.hibernate.type.EncryptedStringType">
       <param name="encryptorRegisteredName">hibernateStringEncryptor</param>
    </typedef>
    
    <class name="com.tracktacular.service.tracker.calendar.CalendarEntry" table="tracker_calendar_entries">
	
		<!-- Id -->
    	<id name="id" column="id" type="long" unsaved-value="null">
			<generator class="identity"/>
		</id>
		
		
		<!-- Version -->
		<version name="version" column="version" unsaved-value="undefined" />
		
		
		<!-- Global Properties -->
		<property name="uid" column="uid" 
		type="java.lang.String" length="36" unique="true" not-null="true" />
		
		<property name="timeCreated" column="time_created" 
		type="long"	not-null="true" />
		
		<property name="timeModified" column="time_modified" 
		type="long"	not-null="true" />
		
		<property name="persistableStateDate" column="persistable_state_date" 
		type="org.joda.time.contrib.hibernate.PersistentDateTime" not-null="false" />
		
		<property name="persistableState" column="persistable_state" access="field"
		length="10" not-null="false"> 
			<type name="org.hibernate.type.EnumType"> 
				<param name="enumClass">com.imadp.dao.PersistableState</param> 
				<param name="type">12</param> 
			</type> 
		</property> 
						
				
		<!-- Properties -->
		<property name="name" column="name" 
		length="512" type="encryptedString" not-null="true" />
		
		<property name="description" column="description" 
		length="1024" type="encryptedString" not-null="false" />
		
		<property name="notes" column="notes" 
		length="100000" type="encryptedString" not-null="false" />

		<property name="alert" column="alert" 
		type="boolean" not-null="true" />
		
		<property name="startDate" column="start_date" 
		type="org.joda.time.contrib.hibernate.PersistentDateTime" not-null="true" />
		
		<property name="endDate" column="end_date" 
		type="org.joda.time.contrib.hibernate.PersistentDateTime" not-null="false" />
		
		<property name="startTime" column="start_time" 
		type="org.joda.time.contrib.hibernate.PersistentDateTime" not-null="false" />
		
		<property name="endTime" column="end_time" 
		type="org.joda.time.contrib.hibernate.PersistentDateTime" not-null="false" />
		
		<component name="recurrence" class="com.tracktacular.service.Recurrence">
			<property name="period" column="recurrence_period" 
			type="org.joda.time.contrib.hibernate.PersistentPeriod" not-null="false" />
		</component>

			  
		<!-- References -->
		<many-to-one name="user" column="user_id" cascade="none" lazy="false" fetch="join" 
		class="com.imadp.service.user.User" not-null="true" />	
		

		<!-- Queries --> 
		<query name="findWithinInterval">
		<![CDATA[
			FROM
				com.tracktacular.service.tracker.calendar.CalendarEntry calendarEntry
			WHERE
				 calendarEntry.user = :user
		    AND  calendarEntry.persistableState = :persistableState	
			AND  
			(
				calendarEntry.recurrence.period IS NOT NULL
				OR
				(
					calendarEntry.startDate between :startDate AND :endDate
					OR
					calendarEntry.endDate between :startDate AND :endDate
				)
			)
		]]>
		</query>	
		 		 		
    </class>
</hibernate-mapping>