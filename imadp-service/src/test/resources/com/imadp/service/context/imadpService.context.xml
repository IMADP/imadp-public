<?xml version="1.0" encoding="UTF-8"?>

<!--
  -
  - Service context
  -
  - Defines beans specific to application services.
  -
  -->
  
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd">
       		
       		
	<!-- Aspect Configuration -->   		
	<context:spring-configured />
	<context:annotation-config/>
	<aop:aspectj-autoproxy/>
	
	<!-- Transaction Configuration -->   		
	<tx:annotation-driven transaction-manager="transactionManager" mode="aspectj" />
        
    
   	<!-- Persistable Dao -->
	<bean id="persistableDao" abstract="true" parent="coreComponent" 
	class="com.imadp.dao.hibernate.PersistableDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />  
		<property name="searchMappingConfiguration" ref="searchMappingConfiguration"/>
    </bean>
			
		
	<!-- Encryptor -->
	<bean id="strongEncryptor" class="org.jasypt.encryption.pbe.PooledPBEStringEncryptor">
	    <property name="password">
	        <value>${strongEncryptor.password}</value>
	    </property>
	    <property name="poolSize">
	        <value>${strongEncryptor.poolSize}</value>
	    </property>
  	</bean>
  
	<bean id="hibernateStringEncryptor" class="org.jasypt.hibernate.encryptor.HibernatePBEStringEncryptor">
		<property name="encryptor" ref="strongEncryptor" />
		<property name="registeredName">
		    <value>${hibernateStringEncryptor.registeredName}</value>
		</property>
	</bean>
		
  
 	<!-- SearchMapping configuration -->
	<bean id="searchMappingConfiguration" 
	class="com.imadp.dao.hibernate.criteria.search.SearchMappingConfiguration">
		<property name="searchMappingEntities">
			<list>
				<bean class="com.imadp.dao.hibernate.criteria.search.SearchMappingEntity">
					<property name="entity" value="com.imadp.dao.hibernate.SamplePersistable" />
					<property name="searchMappingFields">
						<list>
							<bean class="com.imadp.dao.hibernate.criteria.search.SearchMappingField">
								<property name="field"><value>description</value></property>
							</bean>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	
	
	<!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" 
    class="com.imadp.dao.hibernate.criteria.search.SearchSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="searchMappingConfiguration" ref="searchMappingConfiguration"/>
        <property name="mappingDirectoryLocations">
            <list>
         	   <value>classpath:com/imadp/service/context/dao</value>
            </list>
        </property>
        <property name="hibernateProperties">
	        <props>
	     	    <prop key="hibernate.show_sql">${sessionFactory.hibernate.show_sql}</prop> 
	            <prop key="hibernate.dialect">${sessionFactory.hibernate.dialect}</prop>
	            <prop key="hibernate.hbm2ddl.auto">${sessionFactory.hibernate.hbm2ddl.auto}</prop>
	            <prop key="hibernate.bytecode.provider">${sessionFactory.hibernate.bytecode.provider}</prop>
	            <prop key="hibernate.generate_statistics">${sessionFactory.hibernate.generate_statistics}</prop>
	            <prop key="hibernate.search.default.directory_provider">${sessionFactory.hibernate.search.default.directory_provider}</prop>
	            <prop key="hibernate.search.default.indexBase">${java.io.tmpdir}</prop>
	        </props>
        </property>
       <property name="entityInterceptor">
        	<bean class="com.imadp.dao.hibernate.TimestampInterceptor" />	
        </property>
    </bean>
    
    
    <!-- Datasource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<property name="driverClassName">
			<value>${dataSource.driverClassName}</value>
		</property>
		<property name="url">
			<value>${dataSource.url}</value>
		</property>
		<property name="username">
			<value>${dataSource.username}</value>
		</property>
	</bean>


	<!-- Transaction Manager -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" >
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>	
	
	
	<!-- Service Component -->		
	<bean id="serviceComponent" abstract="true" parent="coreComponent" />
				
	
	<!-- Address Service -->		
	<bean id="addressDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.location.address.Address"/>
	</bean>
	
	<bean id="addressService" parent="serviceComponent" 
	class="com.imadp.service.location.address.AddressServiceImpl" >
		<property name="dao" ref="addressDao"/>
	</bean>
	

	<!-- Authority Service -->
	<bean id="authorityDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.account.authority.Authority"/>
	</bean>
	
	<bean id="authorityService" parent="serviceComponent"
	 class="com.imadp.service.account.authority.AuthorityServiceImpl" >
		<property name="dao" ref="authorityDao" />			
	</bean>
	

	<!-- Billing Service Authorize --> 
	<bean id="billingServiceAuthorize" parent="serviceComponent" 
	class="com.imadp.service.commerce.order.billing.authorize.BillingServiceAuthorizeImpl" >
		<property name="apiLoginId">
			<value>${billingServiceAuthorize.apiLoginId}</value>
		</property>
		<property name="transactionKey">
			<value>${billingServiceAuthorize.transactionKey}</value>
		</property>
		<property name="live">
			<value>${billingServiceAuthorize.live}</value>
		</property>
	</bean>	
	
		
	<!-- Card Service -->
	<bean id="cardDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.commerce.card.Card"/>
	</bean>
	
	<bean id="cardService" parent="serviceComponent" 
	class="com.imadp.service.commerce.card.CardServiceImpl" >
		<property name="dao" ref="cardDao"/>
	</bean>
	
	
	<!-- Cart Service -->
	<bean id="cartDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.commerce.cart.Cart"/>
	</bean>
	
	<bean id="cartService" parent="serviceComponent" 
	class="com.imadp.service.commerce.cart.CartServiceImpl" >
		<property name="dao" ref="cartDao"/>
		<property name="cartItemService" ref="cartItemService"/>
	</bean>
	
	
	<!-- Cart Item Service -->
	<bean id="cartItemDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.commerce.cart.item.CartItem"/>
	</bean>
	
	<bean id="cartItemService" parent="serviceComponent" 
	class="com.imadp.service.commerce.cart.item.CartItemServiceImpl" >
		<property name="dao" ref="cartItemDao"/>
	</bean>

	
	<!-- Category Service -->
	<bean id="categoryDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.category.Category"/>
	</bean>
	
	<bean id="categoryService" parent="serviceComponent"
	class="com.imadp.service.category.CategoryServiceImpl" >
		<property name="dao" ref="categoryDao"/>
		<property name="findByUserFindCriteriaCache">
			<bean parent="cacheFactory">
				<constructor-arg value="categoryService.findByUserFindCriteriaCache"/>
			</bean>
		</property>		
		<property name="findCountByUserFindCriteriaCache">
			<bean parent="cacheFactory">
				<constructor-arg value="categoryService.findCountByUserFindCriteriaCache"/>
			</bean>
		</property>		
	</bean>		
	
		
	<!-- Country Service -->
	<bean id="countryDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.location.country.Country"/>
	</bean>
	
	<bean id="countryService" parent="serviceComponent" 
	class="com.imadp.service.location.country.CountryServiceImpl">
		<property name="dao" ref="countryDao"/>
		<property name="defaultCountryCode">
			<value>${countryService.defaultCountryCode}</value>
		</property>
	</bean>
			
	
	<!-- Credentials Service -->
	<bean id="credentialsDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.account.credentials.Credentials"/>
	</bean>
	
	<bean id="credentialsService" parent="serviceComponent" 
	class="com.imadp.service.account.credentials.CredentialsServiceImpl" >
		<property name="dao" ref="credentialsDao"/>
	</bean>
	
		
	<!-- Event Service -->
	<bean id="eventDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.commerce.event.Event"/>
	</bean>
	
	<bean id="eventService" parent="serviceComponent" class="com.imadp.service.commerce.event.EventServiceImpl">
		<property name="dao" ref="eventDao"/>
 	</bean>	
		

	<!-- PersistableeEmail Service -->
	<bean id="persistableEmailDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.email.PersistableEmail"/>
	</bean>
		
 	<bean id="persistableEmailServiceSynchronous" parent="serviceComponent" 
 	class="com.imadp.service.email.PersistableEmailServiceSynchronousImpl">
		<property name="dao" ref="persistableEmailDao"/>
		<property name="emailSender" ref="emailSenderMockSuccessful"/>
		<property name="templateEngine" ref="templateEngineVelocity"/>		
	</bean>
 	
	<bean id="persistableEmailServiceAsynchronous" parent="serviceComponent" 
 	class="com.imadp.service.email.PersistableEmailServiceAsynchronousImpl">
		<property name="dao" ref="persistableEmailDao"/>
		<property name="emailSender" ref="emailSenderMockSuccessful"/>
		<property name="templateEngine" ref="templateEngineVelocity"/>		
	</bean>
 	
 	
	<!-- Feedback Service -->
	<bean id="feedbackDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.feedback.Feedback"/>
	</bean>
	
	<bean id="feedbackService" parent="serviceComponent" 
	class="com.imadp.service.feedback.FeedbackServiceImpl">
		<property name="dao" ref="feedbackDao"/>
	</bean>
		
		
	<!-- Log Entry Service -->
	<bean id="logEntryDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.log.LogEntry"/>
	</bean>
	
	<bean id="logEntryAppender" init-method="init" class="com.imadp.service.log.LogEntryAppenderImpl">
		<property name="level" value="ERROR"/>
		<property name="logEntryService" ref="logEntryService" />
	</bean>
	
	<bean id="logEntryService" parent="serviceComponent" 
	class="com.imadp.service.log.LogEntryServiceImpl">
		<property name="dao" ref="logEntryDao"/>
	</bean>
	
	
	<!-- Metric Service -->
	<bean id="metricsDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.metrics.Metrics"/>
	</bean>
	
	<bean id="metricsService" parent="serviceComponent" 
	class="com.imadp.service.metrics.MetricsServiceImpl" >
		<property name="dao" ref="metricsDao"/>
		<property name="taskExecutor" ref="metricsTaskExecutor"/>
	</bean>
	
	<bean id="metricsTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
    	<property name="corePoolSize" value="1" />
    	<property name="maxPoolSize" value="5" />
    	<property name="waitForTasksToCompleteOnShutdown" value="true" />
	</bean>	
	
	<bean id="metricsAspect" parent="coreComponent" class="com.imadp.service.metrics.MetricsAspect" factory-method="aspectOf" >	
		<property name="metricsService" ref="metricsService"/>
	</bean>
	
	
	<!-- Order Service -->
	<bean id="orderDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.commerce.order.Order"/>
	</bean>
	
	<bean id="orderService" parent="serviceComponent" 
	class="com.imadp.service.commerce.order.OrderServiceImpl" >
		<property name="dao" ref="orderDao"/>
	</bean>
	
	
	<!-- Order Report Service -->
	<bean id="orderReportDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.commerce.order.report.OrderReport"/>
	</bean>
	
	<bean id="orderReportService" parent="serviceComponent" 
	class="com.imadp.service.commerce.order.report.OrderReportServiceImpl" >
		<property name="dao" ref="orderReportDao"/>
		<property name="orderService" ref="orderService" />
	</bean>
	
	
	<!-- Person Service -->
	<bean id="personDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.person.Person"/>
	</bean>
	
	<bean id="personService" parent="serviceComponent" 
	class="com.imadp.service.person.PersonServiceImpl" >
		<property name="dao" ref="personDao"/>
	</bean>
	
		
	<!-- Product Service -->
	<bean id="productDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.commerce.product.Product"/>
	</bean>
	
	<bean id="productService" parent="serviceComponent" 
	class="com.imadp.service.commerce.product.ProductServiceImpl" >
		<property name="dao" ref="productDao"/>
	</bean>
	
	
	<!-- Report Service -->
	<bean id="reportDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.report.Report"/>
	</bean>
	
	<bean id="reportService" parent="serviceComponent" 
	class="com.imadp.service.report.ReportServiceImpl">
		<property name="dao" ref="reportDao"/>
	</bean>
		
	
	<!-- Sample Persistable Service -->
	<bean id="samplePersistableDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.dao.hibernate.SamplePersistable"/>
	</bean>
		
	<bean id="samplePersistableService" parent="serviceComponent" 
	class="com.imadp.service.PersistableServiceImpl" >
		<property name="dao" ref="samplePersistableDao"/>
		<property name="getCache">
			<bean parent="cacheFactory">
				<constructor-arg value="samplePersistableService.getCache"/>
			</bean>
		</property>
	</bean>
		
		
	<!-- Sample Votable -->
	<bean id="sampleVotableDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.vote.SampleVotable"/>
	</bean>
	
	<bean id="sampleVotableService" parent="serviceComponent" 
	class="com.imadp.service.PersistableServiceImpl" >
		<property name="dao" ref="sampleVotableDao"/>
	</bean>
	
	
	<!-- Sample Taggable -->
	<bean id="sampleTaggableDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.tag.SampleTaggable"/>
	</bean>
	
	<bean id="sampleTaggableService" parent="serviceComponent" 
	class="com.imadp.service.PersistableServiceImpl" >
		<property name="dao" ref="sampleTaggableDao"/>
	</bean>
	
	
	<!-- Shipping Service -->
	<bean id="shippingServiceEmail" parent="serviceComponent" 
	class="com.imadp.service.commerce.order.shipping.ShippingServiceEmailImpl">
		<property name="persistableEmailService" ref="persistableEmailServiceSynchronous"/>
		<property name="emailTo">
			<value>${shippingServiceEmail.emailTo}</value>
		</property>
		<property name="emailTemplate">
			<value>TestTemplate</value>
		</property>
	</bean>
	
	
	<!-- Subscription Plan Service -->
	<bean id="subscriptionPlanDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.commerce.subscription.plan.SubscriptionPlan"/>
	</bean>
	
	<bean id="subscriptionPlanService" parent="serviceComponent" 
	class="com.imadp.service.commerce.subscription.plan.SubscriptionPlanServiceImpl">
		<property name="dao" ref="subscriptionPlanDao"/>
	</bean>
		
	
	<!-- User Service -->
	<bean id="userDao" parent="persistableDao">
		<property name="entityClass" value="com.imadp.service.user.User"/>
	</bean>
		
	<bean id="userService" parent="serviceComponent" 
	class="com.imadp.service.user.UserServiceImpl">
		<property name="dao" ref="userDao"/>
		<property name="getCache">
			<bean parent="cacheFactory">
				<constructor-arg value="userService.getCache"/>
			</bean>
		</property>
	</bean>
			
			
	<!-- Tag Service -->
	<bean id="tagDao" parent="persistableDao" class="com.imadp.service.tag.TagDaoImpl">
		<property name="entityClass" value="com.imadp.service.tag.SampleTag"/>
	</bean>
		
	<bean id="tagService" parent="serviceComponent" class="com.imadp.service.tag.TagServiceImpl">
		<property name="tagDao" ref="tagDao"/>
	</bean>
			
			
	<!-- Vote Service -->
	<bean id="voteDao" parent="persistableDao" class="com.imadp.service.vote.VoteDaoImpl">
		<property name="entityClass" value="com.imadp.service.vote.SampleVote"/>
	</bean>
		
	<bean id="voteService" parent="serviceComponent" class="com.imadp.service.vote.VoteServiceImpl">
		<property name="voteDao" ref="voteDao"/>
		<property name="findCountByFindCriteriaCache">
			<bean parent="cacheFactory">
				<constructor-arg value="voteService.findCountByFindCriteriaCache"/>
			</bean>
		</property>		
		<property name="findCountByVotableCache">
			<bean parent="cacheFactory">
				<constructor-arg value="voteService.findCountByVotableCache"/>
			</bean>
		</property>		
		<property name="findTallyByVotableCache">
			<bean parent="cacheFactory">
				<constructor-arg value="voteService.findTallyByVotableCache"/>
			</bean>
		</property>		
	</bean>
			
	<bean id="voteServiceMemory" parent="serviceComponent" 
	class="com.imadp.service.vote.VoteServiceMemoryImpl" >
		<property name="voteDao" ref="voteDao"/>
		<property name="findByUserFindCriteriaCache">
			<bean parent="cacheFactory">
				<constructor-arg value="voteServiceBinarySearchFind.findByUserFindCriteriaCache"/>
			</bean>
		</property>		
	</bean>
	
	
	<!-- 
	
		Authentication
		
	 -->
	
	
	<!-- Authentication Manager -->
	<bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<list>
				<ref bean="daoAuthenticationProvider" />
			</list>
		</property>
	</bean>


	<!-- Authentication Providers -->
	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="credentialsService" />
		<property name="passwordEncoder" ref="passwordEncoder" />
	</bean>
	
	
	<!-- 
	
		Facades
		
	 -->
	
	
	<!-- Account Facade -->
	<bean id="accountFacade" parent="coreComponent"
	 class="com.imadp.service.account.AccountFacadeImpl" >
		<property name="persistableEmailService" ref="persistableEmailServiceSynchronous" />
		<property name="credentialsService" ref="credentialsService" />
		<property name="authorityService" ref="authorityService" />
		<property name="userService" ref="userService" />
		<property name="digestor" ref="digestorJasypt" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="emailAccountVerificationTemplate" value="TestTemplate" />
		<property name="emailResetPasswordTemplate" value="TestTemplate"/>
	</bean>
	
		
	<!-- Order Facade -->
	<bean id="OrderFacade" parent="coreComponent"
	 class="com.imadp.service.commerce.order.OrderFacadeImpl" >
		<property name="billingService" ref="billingServiceAuthorize" />
		<property name="shippingService" ref="shippingServiceEmail" />
		<property name="orderService" ref="orderService" />
	</bean>
	
			
</beans>
